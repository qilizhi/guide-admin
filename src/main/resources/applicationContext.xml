<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
      http://www.springframework.org/schema/context   
      http://www.springframework.org/schema/context/spring-context.xsd
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
      http://www.springframework.org/schema/tx 
      http://www.springframework.org/schema/tx/spring-tx.xsd 
      http://www.springframework.org/schema/util 
      http://www.springframework.org/schema/util/spring-util-3.1.xsd
      "
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc">

	<!-- 自动读取。适配文件 start -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<!-- <value>classpath:log4j.properties</value> -->
				<value>classpath:conf.properties</value>
				<value>classpath:redis.properties</value>
				<!-- 可以适当增加个数据库 -->
			</list>
		</property>
	</bean>
	<!-- 扫描文件（自动将shiro部分） -->
	<!-- <context:component-scan base-package="com.mlx.guide.shiro" /> -->
	<!-- 因为shiro 里用到userService等服务层故（自动将servicec层注入） -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc_url}</value>
		</property>
		<property name="username">
			<value>${jdbc_username}</value>
		</property>
		<property name="password">
			<value>${jdbc_password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>20</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>1</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>60000</value>
		</property>
		<!-- 连接池最大空闲 -->
		<!-- <property name="maxIdle"> <value>20</value> </property> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>

		<!-- 监控统计拦截的filters,日志记录 start -->
		<!-- 并在filters属性中配置了log4j -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="log-filter" />
			</list>
		</property>
		<!-- 监控统计拦截的filters,日志记录 end -->
		<property name="filters">
			<value>stat,wall,log4j</value>
		</property>

	</bean>


	<!-- 慢SQL记录 start -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<property name="mergeSql" value="false" />
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
	</bean>

	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<!-- <property name="resultSetLogEnabled" value="false" /> -->
		<!-- <property name="statementExecutableSqlLogEnable" value="true" /> -->
	</bean>
	<context:component-scan base-package="com.mlx.guide" />
	<import resource="classpath*:/spring-jpa-data.xml" />
	<import resource="classpath*:/spring-mybatis.xml" />
	<import resource="classpath*:/spring-redis.xml" />

	<import resource="classpath*:/spring-shiro.xml" />
</beans>