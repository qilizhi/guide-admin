<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlx.guide.dao.RoleToAuthorityMapper">
	<resultMap id="BaseResultMap" type="com.mlx.guide.entity.RoleToAuthority">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="authority_id" property="authorityId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_id, authority_id
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role_id_authority_id
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByRoleId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role_id_authority_id
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_role_id_authority_id
		where id = #{Id,jdbcType=INTEGER}
	</delete>
	<!-- 批量删除 -->
	<delete id="batDelete" parameterType="java.util.Map">
		delete from sys_role_id_authority_id
		where role_id = #{roleId,jdbcType=INTEGER} and authority_id in (
		<foreach collection="authorityIds"  item="authorityId"
			separator=",">
			#{authorityId,jdbcType=INTEGER}
		</foreach>
		)

	</delete>
	<delete id="deleteByRoleToAuthority" parameterType="com.mlx.guide.entity.RoleToAuthority">
		delete from sys_role_id_authority_id
		<trim prefix="where" prefixOverrides="and|or">
			<if test="roleId != null and roleId != ''">
				and role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="authorityId != null and authorityId != ''">
				and authority_id = #{authorityId,jdbcType=INTEGER}
			</if>
		</trim>
	</delete>
	<delete id="deleteByRoleId" parameterType="java.lang.Integer">
		delete from sys_role_id_authority_id
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>

	<!--批量插入 -->
	<insert id="batInsert" parameterType="java.util.Map">
		insert into sys_role_id_authority_id ( role_id, authority_id
		)
		values
		<foreach collection="authorityIds" item="authorityId" index="index"
			separator=",">
			( #{roleId,jdbcType=INTEGER}, #{authorityId,jdbcType=INTEGER})
		</foreach>
	</insert>
	<insert id="insert" parameterType="com.mlx.guide.entity.RoleToAuthority">
		insert into sys_role_id_authority_id ( role_id, authority_id
		)
		values ( #{roleId,jdbcType=INTEGER}, #{authorityId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.mlx.guide.entity.RoleToAuthority">
		insert into sys_role_id_authority_id
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				role_id,
			</if>
			<if test="authorityId != null">
				authority_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleId != null">
				#{roleId,jdbcType=INTEGER},
			</if>
			<if test="authorityId != null">
				#{authorityId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.mlx.guide.entity.RoleToAuthority">
		update sys_role_id_authority_id
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="authorityId != null">
				authority_id = #{authorityId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mlx.guide.entity.RoleToAuthority">
		update sys_role_id_authority_id
		set role_id = #{roleId,jdbcType=INTEGER},
		authority_id = #{authorityId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>