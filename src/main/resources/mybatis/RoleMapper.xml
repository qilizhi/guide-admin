<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlx.guide.dao.RoleMapper">
	<resultMap id="BaseResultMap" type="com.mlx.guide.entity.Role">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, parent_id, name, description
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByParentId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where parent_id = #{parentId,jdbcType=INTEGER}
	</select>
	<select id="selectFirstParentId" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from sys_role
		where parent_id is null
	</select>
	<select id="getRolesByUserNo" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select DISTINCT(r.id),r.`name`,r.parent_id,r.description from sys_role r,sys_user_id_role_id
		ur where ur.role_id=r.id and ur.user_no=#{userNo}
	</select>

	<select id="list" resultMap="BaseResultMap" parameterType="com.mlx.guide.entity.Role">
		select
		<include refid="Base_Column_List" />
		from sys_role
		<if test="name !=null">
			where name like CONCAT(CONCAT('%',#{name,jdbcType=VARCHAR}),'%')
		</if>
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.mlx.guide.entity.Role"
		keyProperty="id" useGeneratedKeys="true">
		insert into sys_role (id, parent_id, name,
		description)
		values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{description,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.mlx.guide.entity.Role"
		keyProperty="id" useGeneratedKeys="true">
		insert into sys_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="description != null">
				description,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.mlx.guide.entity.Role">
		update sys_role
		<set>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				description = #{description,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.mlx.guide.entity.Role">
		update sys_role
		set parent_id = #{parentId,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		description = #{description,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>