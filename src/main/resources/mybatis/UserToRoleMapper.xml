<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlx.guide.dao.UserToRoleMapper" >
  <resultMap id="BaseResultMap" type="com.mlx.guide.entity.UserToRole" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_no" property="userNo" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_no, role_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_id_role_id
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByUserNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_id_role_id
    where user_no = #{userNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_id_role_id
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 批量删除 -->
	<delete id="batDelete" parameterType="java.util.Map">
		 delete from sys_user_id_role_id
    where user_no = #{userNo,jdbcType=VARCHAR} and role_id in (
		<foreach collection="roleIds"  item="roleId"
			separator=",">
			#{roleId,jdbcType=INTEGER}
		</foreach>
		)

	</delete>
  <insert id="insert" parameterType="com.mlx.guide.entity.UserToRole" keyProperty="id" useGeneratedKeys="true">
    insert into sys_user_id_role_id ( user_no, role_id
      )
    values ( #{userNo,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  
  
  
  	<!--批量插入 -->
	<insert id="batInsert" parameterType="java.util.Map">
	 insert into sys_user_id_role_id ( user_no, role_id
      )
    values
		<foreach collection="roleIds" item="roleId" index="index"
			separator=",">
			( #{userNo,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER})
		</foreach>
	</insert>
  <insert id="insertSelective" parameterType="com.mlx.guide.entity.UserToRole" >
    insert into sys_user_id_role_id
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userNo != null" >
        user_no,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userNo != null" >
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlx.guide.entity.UserToRole" >
    update sys_user_id_role_id
    <set >
      <if test="userNo != null" >
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlx.guide.entity.UserToRole" >
    update sys_user_id_role_id
    set user_no = #{userNo,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>